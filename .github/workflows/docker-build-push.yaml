name: Docker Build, Push, and Release

on:
  push:
    branches:
      - main
  # workflow_dispatch:

jobs:
  create-version-tag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.increment-version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  #Fetch all history for `git describe`
          token: ${{ secrets.GH_ACCESS_TOKEN }} 

      - name: Get latest SemVer tag
        id: get-latest-tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 --match "v[0-9]*.[0-9]*.[0-9]*" 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Increment SemVer version
        id: increment-version
        run: |
          LATEST_TAG=${{ steps.get-latest-tag.outputs.latest_tag }}
          if [[ "$LATEST_TAG" == "v0.0.0" ]]; then
            NEW_VERSION="v1.0.0"
          else
            # Split the tag into major, minor, and patch
            IFS='.' read -r MAJOR MINOR PATCH <<< "${LATEST_TAG#v}"
            # Increment patch version by default
            NEW_VERSION="v$MAJOR.$MINOR.$((PATCH + 1))"
          fi
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.increment-version.outputs.version }}
          git push origin ${{ steps.increment-version.outputs.version }}
        env:
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}  # has repo access as well


  build-and-push:
    needs: create-version-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/pbs-k8s-backup:latest
            ghcr.io/${{ github.repository_owner }}/pbs-k8s-backup:${{ needs.create-version-tag.outputs.version }}
          labels: |
            org.opencontainers.image.version=${{ needs.create-version-tag.outputs.version }}
            org.opencontainers.image.source=${{ github.repository_url }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.create-version-tag.outputs.version }}
          release_name: Release ${{ needs.create-version-tag.outputs.version }}
          draft: false
          prerelease: false
        env:
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}